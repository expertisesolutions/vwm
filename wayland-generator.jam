# Copyright 2019 Felipe Magno de Almeida
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE_1_0.txt or copy at
# http://www.boost.org/LICENSE_1_0.txt)

import type ;
import common ;
import generators ;
import toolset ;
import project ;
import targets ;
import property-set ;

type.register WAYLAND_HPP : : HPP ;

rule init ( )
{
  if ! $(.initialized)
  {
    .initialized = true ;
    .protocol-target = [ exe protocol_gen : protocol/src/generator.cpp protocol/src/algos.cpp /boost//program_options /pugixml//pugixml
     : <include>protocol/include <cxxflags>-std=c++2a ] ;

    generators.register-composing wayland-generator.generate : XML EXE : WAYLAND_HPP ;

    IMPORT $(__name__) : wayland-generator : : wayland-generator ;
  }
}

rule wayland-generator ( target : sources + )
{
  local project = [ project.current ] ;

  targets.create-typed-target WAYLAND_HPP : $(project) : $(target) : $(.protocol-target) $(sources) ;
}

rule generate ( target : sources + : requirements * )
{
  generator = $(sources[1]) ;
  xml-sources = $(sources[2-]) ;

  NAME on $(target) = $(generator) ;
  DEPENDS $(target) : $(sources) ;
  action-generate $(target) : $(xml-sources) ;
  common.Clean clean-all : $(target) ;
}

actions action-generate bind NAME
{
  $(NAME) -o $(<) "-i$(>)"
}
